///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SEDATA
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FUpload recording.
    /// </summary>
    [TestModule("64a353af-6f4d-4af9-b4da-90cea48a03e9", ModuleType.Recording, 1)]
    public partial class FUpload : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SEDATARepository repository.
        /// </summary>
        public static SEDATARepository repo = SEDATARepository.Instance;

        static FUpload instance = new FUpload();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FUpload()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FUpload Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\Users\\mkadiwala\\Desktop\\RCT\\Training Programs\\FileUpload.exe' in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication("C:\\Users\\mkadiwala\\Desktop\\RCT\\Training Programs\\FileUpload.exe", "", "C:\\Users\\mkadiwala\\Desktop\\RCT\\Training Programs", false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form1.Button1' at Center.", repo.Form1.Button1Info, new RecordItemIndex(1));
            repo.Form1.Button1.Click();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 5m to exist. Associated repository item: 'Form1.LbFinished'", repo.Form1.LbFinishedInfo, new ActionTimeout(300000), new RecordItemIndex(2));
            //repo.Form1.LbFinishedInfo.WaitForExists(300000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5m for the attribute 'Text' to equal the specified value '100'. Associated repository item: 'Form1.LbProgress'", repo.Form1.LbProgressInfo, new RecordItemIndex(3));
            repo.Form1.LbProgressInfo.WaitForAttributeEqual(300000, "Text", "100");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(4));
            Delay.Duration(2000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.Form1.Self, false, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form1.BtResetUI' at Center.", repo.Form1.BtResetUIInfo, new RecordItemIndex(6));
            repo.Form1.BtResetUI.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form1.Close' at Center.", repo.Form1.CloseInfo, new RecordItemIndex(7));
            repo.Form1.Close.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
